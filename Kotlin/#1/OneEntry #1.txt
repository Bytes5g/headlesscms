implementation 'io.ktor:ktor-client-core:2.2.3'
implementation 'io.ktor:ktor-client-cio:2.2.3'
implementation 'io.ktor:ktor-serialization-gson:2.2.3'

class OneEntryProvider {

    companion object {

        private val client = HttpClient(CIO)
        private const val domain = "https://project.oneentry.cloud/api/content"
        private val gson = GsonBuilder().create()

        suspend fun getMenu(marker: String): MenuModel {

            val response = client.get("$domain/menus/marker/$marker") {

                contentType(ContentType.Application.Json)
            }

            return gson.fromJson(response.bodyAsText(), MenuModel::class.java)
        }
    }
}

data class MenuModel(
    val id: Int,
    val identifier: String,
    val pages: List<PageModel>
)

data class PageModel(
    val id: Int,
    val localizeInfos: Map<String, InfoModel>,
    val pageUrl: String
)

data class InfoModel(
    val title: String,
    val content: String,
    val menuTitle: String
)

CoroutineScope(Dispatchers.Main).launch {
	
	try {

		val menus: MenuModel = OneEntryProvider.getMenu("categories")

		Log.e("Menu", menus.toString())

	} catch (error: Exception) {

		Log.e("Menu error", error.toString())
	}
}

<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
<uses-permission android:name="android.permission.INTERNET"/>